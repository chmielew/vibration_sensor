/*
 * threshold_exceeded_notification.h
 *
 *  Created on: May 15, 2018
 *      Author: chmielew
 */

#ifndef COMPONENTS_THRESHOLD_EXCEEDED_NOTIFICATION_H_
#define COMPONENTS_THRESHOLD_EXCEEDED_NOTIFICATION_H_
//////////////////////////////////////////////////////////////////////////////////////////
//Includes																				//
//////////////////////////////////////////////////////////////////////////////////////////
#include "stdint.h"

//////////////////////////////////////////////////////////////////////////////////////////
//Macros																				//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//Global typedefs																		//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//Global variables																		//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//Global functions prototypes															//
//////////////////////////////////////////////////////////////////////////////////////////

/****************************************************************************************\
Function:

******************************************************************************************
Parameters:

******************************************************************************************
Abstract:

\****************************************************************************************/
void threshold_exceeded_init(uint16_t threshold);

void threshold_exceeded_task(void *pvParameter);

void threshold_exceeded_reset(void);

void threshold_exceeded_set_threshold(uint16_t threshold);

uint16_t threshold_exceeded_get_max_val_raw(void);

float threshold_exceeded_get_max_val_voltage(void);

uint16_t * threshold_exceeded_get_max_val_pointer(void);

//////////////////////////////////////////////////////////////////////////////////////////
//End of file																			//
//////////////////////////////////////////////////////////////////////////////////////////
#endif /* COMPONENTS_THRESHOLD_EXCEEDED_NOTIFICATION_H_ */
